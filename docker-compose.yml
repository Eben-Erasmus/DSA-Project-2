version: '3.8'

services:
  # Infrastructure Services
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - ticketing-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    networks:
      - ticketing-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    networks:
      - ticketing-network

  mongodb:
    image: mongo:6.0
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - mongodb_data:/data/db
      - ./infrastructure/mongodb/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - ticketing-network

  # Application Services (Working ones only)
  passenger-service:
    build:
      context: ./services/passenger-service
      dockerfile: Dockerfile
    container_name: passenger-service
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/ticketing?authSource=admin
    networks:
      - ticketing-network

  transport-service:
    build:
      context: ./services/transport-service
      dockerfile: Dockerfile
    container_name: transport-service
    ports:
      - "8082:8082"
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/ticketing?authSource=admin
    networks:
      - ticketing-network

  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "8085:8085"
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/ticketing?authSource=admin
    networks:
      - ticketing-network

  admin-service:
    build:
      context: ./services/admin-service
      dockerfile: Dockerfile
    container_name: admin-service
    ports:
      - "8086:8086"
    depends_on:
      - kafka
      - mongodb
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/ticketing?authSource=admin
    networks:
      - ticketing-network

  # Note: ticketing-service and payment-service have dependency issues
  # They are commented out until dependencies are resolved
  # ticketing-service:
  #   build:
  #     context: ./services/ticketing-service
  #     dockerfile: Dockerfile
  #   container_name: ticketing-service
  #   ports:
  #     - "8083:8083"
  #   depends_on:
  #     - kafka
  #     - mongodb
  #   environment:
  #     - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
  #     - MONGODB_URL=mongodb://admin:password@mongodb:27017/ticketing?authSource=admin
  #   networks:
  #     - ticketing-network

  # payment-service:
  #   build:
  #     context: ./services/payment-service
  #     dockerfile: Dockerfile
  #   container_name: payment-service
  #   ports:
  #     - "8084:8084"
  #   depends_on:
  #     - kafka
  #     - mongodb
  #   environment:
  #     - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
  #     - MONGODB_URL=mongodb://admin:password@mongodb:27017/ticketing?authSource=admin
  #   networks:
  #     - ticketing-network

volumes:
  mongodb_data:

networks:
  ticketing-network:
    driver: bridge
